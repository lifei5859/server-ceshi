const Router = require('koa-router');
const path = require('path');
const fs = require('await-fs');
const common = require('../../libs/common');
const {PASS_SUFFIX, HTTP_HOST, HTTP_UPLOAD} = require('../../config')

let router = new Router();

router.get('/login', async ctx => {
    await ctx.render('admin/login', {
        HTTP_HOST,
    });
});

router.post('/login', async ctx => {
    let {user, password} = ctx.request.fields
    let data = await fs.readFile(path.resolve(__dirname, '../../static/admin.json'));
    let adminArr = JSON.parse(data);
    ctx.assert(user, 400, 'user is required');
    ctx.assert(password, 400, 'password is required');
    let tempAdmin = adminArr.filter(item => {
        return (item.name === user);
    });
    if (tempAdmin.length === 0) {
        ctx.body = common.resJson(0, '用户不存在');
        return;
    }
    if (tempAdmin[0].pass !== common.md5(password + PASS_SUFFIX)) {
        ctx.body = common.resJson(0, '密码错误');
        return;
    }
    ctx.session['admin'] = user;
    ctx.body = common.resJson(1, '登录成功');
})
router.all('*', async (ctx, next) => {
    if (ctx.session['admin']) {
       await next();
        // return;
    } else {
        ctx.redirect('admin/login');
    }
});

const tableConf = [
    {title: '标题', name: 'title', type: 'text'},
    {title: '图片', name: 'src', type: 'file'},
    {title: '链接', name: 'href', type: 'text'},
    {title: '序号', name: 'serial', type: 'number'}
];
const page_type = 'banner';
const page_types={
    'banner': 'banner管理',
    'catalog': '类目管理',
    'article': '文章管理',
  };
router.get('/', async ctx => {
    const data = await ctx.db.query(`SELECT * FROM banner_list`);
    try {
        await ctx.render('admin/index', {
        title: 'banner编辑',
        tableConf,
        page_types,
        page_type,
        data
        });
    } catch (e) {
        console.log(e)
        ctx.body = { err: 1, msg: 'server error' }
    }
});
router.post('/list', async ctx => {
    let {title, serial, href, src} = ctx.request.fields;
    src = path.basename(src[0].path);
    await ctx.db.query(`INSERT INTO banner_list (title, serial_num, src, img_src) VALUES(?,?,?,?)`, [title, serial, href, src]);
    ctx.body = common.resJson(1, '添加成功');
});
router.get('/delete/:id', async ctx => {
    let {id} = ctx.params;
    console.log(id)
    let data = await ctx.db.query(`SELECT src FROM banner_list WHERE ID=?`, [Number(id)]);
    ctx.assert(data.length, 400, 'on data');
    console.log(data)

});


module.exports = router.routes()